
# the main directory containing all the Dexter resources 
data.dir = ./data

# the mapdb directory containing the resources to map Label to WikiId
mapdb.dir = mapdb
mapdb.commit = 1000

# the folder containing the lucene index 
lucene.index = lucene

# the commonness threshold, only entities with 
# a commonness greater than the threhold will be attacched
# to the spotmatch
spot.commonness.threshold = 0.005
# the spot probability threshold, only spots with a threshold greater than 
# the threshold will be considered candidate matches
spot.probability.threshold = 0.02

#number of entities in the collection
w = 4700000

#relatedness function
relatedness=milne

#how many words consider around the spot
context.window.size = 50

# the binary representation of the incoming nodes for each entity
ram.incoming.nodes = ./data/graph/incoming-edges.bin
# the binary representation of the outcoming nodes for each entity
ram.outcoming.nodes = ./data/graph/outcoming-edges.bin

# use the context text to rank the entities (affects performance)
rank.by.similarity = false
# use the prior probability (e|s) aka commonness to rank the entities 
rank.by.commonness = true

lucene.wiki.id = wiki2lucene-map.bin

# type of the spot repository 
spot.repository=ram

#relatedness cache size
relatedness.cache.size=5000
#spot dictionary cache
spotter.cache.size=10000
#the file containing the spots
spots = spot/spots.tsv.gz
# the file containing the mininal perfect hash for each spot
ram.spot.perfect.hash = spot/ram/minimal-perfect-hash.bin
#the offset of the spot in the encoded data file
ram.spot.offsets = spot/ram/offsets.gz
#the offset of the spot in the encoded data file, compressed with elias fano
ram.spot.offsets.ef = spot/ram/offsets.eliasfano.bin
#the file with the encoded spots
ram.spot.data.bin = spot/ram/spots.bin

# disambiguator.class=it.cnr.isti.hpc.tagme.Tagme
# tagme.window.size=30
# tagme.epsilon=0.7

# disambiguator.class=it.cnr.isti.hpc.wikiminer.Wikiminer
